# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: [push]

permissions: {}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/poi/poi/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
    - uses: actions/checkout@v3

    - run: touch starting_build_SetupJDK_22
    - run: rm starting_build_SetupJDK_22
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'

    - run: touch starting_build_VerifyGradlewrapper_29
    - run: rm starting_build_VerifyGradlewrapper_29
    - name: Verify Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - run: touch starting_build_Grantexecutepermissionforgradlew_32
    - run: rm starting_build_Grantexecutepermissionforgradlew_32
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - run: touch starting_build_BuildwithGradle_35
    - run: rm starting_build_BuildwithGradle_35
    - name: Build with Gradle
      run: ./gradlew check -PjdkVersion=11 --no-daemon --refresh-dependencies
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Check script file exists and execute
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: .github/workflows/script.py
    - name: File exists
      if: steps.check_files.outputs.files_exists == 'true'
      run: |
        echo 'not exists python file'
        run: |
          python .github/workflows/script.py
    - name: Checkout to destination CI-analyzes repo
      uses: actions/checkout@v3
      if: always()
      with:
        path: poi
        ref: '1677128267-259e146'
        repository: 'UT-SE-Research/ci-analyzes'
        token: '${{ secrets.API_TOKEN_GITHUB }}'
        persist-credentials: true
    - name: Copy files to push to another directory
      if: steps.check_files.outputs.files_exists == 'true'
      run: |
        mkdir -p poi/poi/.github/workflows/test-gradle/build
        cp -rvT optimizing-ci-builds-ci-analysis poi/poi/.github/workflows/test-gradle/build
    - name: Pushes analysis to another repository
      if: steps.check_files.outputs.files_exists == 'true'
      working-directory: poi
      run: |
        git config --global user.name 'UT-SE-Research'
        git config --global user.email '${{ secrets.EMAIL }}'
        git add .
        git commit -m 'rebased and pushed'
        while ! git push -f origin 1677128267-259e146; do
          git pull --rebase origin 1677128267-259e146
          sleep $((RANDOM % 5 + 1))
        done
